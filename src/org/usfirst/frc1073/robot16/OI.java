package org.usfirst.frc1073.robot16;

import org.usfirst.frc1073.robot16.commands.*;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton toggleCubic;
    public Joystick driverLeftStick;
    public JoystickButton togglePID;
    public Joystick driverRightStick;
    public JoystickButton testManUpBut;
    public JoystickButton testManDownBut;
    public JoystickButton testManFwdBut;
    public JoystickButton testManBackBut;
    public JoystickButton testManReleaseBut;
    public JoystickButton testLoadBut;
    public JoystickButton testLauchBut;
    public JoystickButton testLauchExtra;
    public Joystick operatorStick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        operatorStick = new Joystick(2);
        
        testLauchExtra = new JoystickButton(operatorStick, 10);
        testLauchExtra.whileHeld(new TestLaucherExtra());
        testLauchBut = new JoystickButton(operatorStick, 11);
        testLauchBut.whileHeld(new TestLauch());
        testLoadBut = new JoystickButton(operatorStick, 12);
        testLoadBut.whileHeld(new TestLoad());
        testManReleaseBut = new JoystickButton(operatorStick, 1);
        testManReleaseBut.whenPressed(new TestManualRelease());
        testManBackBut = new JoystickButton(operatorStick, 3);
        testManBackBut.whileHeld(new TestManualLauchBackward());
        testManFwdBut = new JoystickButton(operatorStick, 5);
        testManFwdBut.whileHeld(new TestManualLauchForward());
        testManDownBut = new JoystickButton(operatorStick, 4);
        testManDownBut.whileHeld(new TestManualLauchDown());
        testManUpBut = new JoystickButton(operatorStick, 6);
        testManUpBut.whileHeld(new TestManualLauchUp());
        driverRightStick = new Joystick(1);
        
        togglePID = new JoystickButton(driverRightStick, 1);
        togglePID.whenPressed(new TogglePID());
        driverLeftStick = new Joystick(0);
        
        toggleCubic = new JoystickButton(driverLeftStick, 1);
        toggleCubic.whenPressed(new ToggleCubic());


        // SmartDashboard Buttons
        SmartDashboard.putData("NavManager", new NavManager());
        SmartDashboard.putData("TestManualRelease", new TestManualRelease());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getdriverLeftStick() {
        return driverLeftStick;
    }

    public Joystick getdriverRightStick() {
        return driverRightStick;
    }

    public Joystick getoperatorStick() {
        return operatorStick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

